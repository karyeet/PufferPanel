name: PR Build
on:
  pull_request:

env:
  SWAG_VERSION: "1.8.8"
  GO_VERSION: "1.19"
  NODE_VERSION: "14"

concurrency:
  group: pr-${{ github.ref }}
  cancel-in-progress: true
  
jobs:
  build:
    name: Validate Builds
    runs-on: ubuntu-20.04
    if: startsWith(github.head_ref, 'l10n_master') == false

    timeout-minutes: 5
    
    steps:
    - name: Set up Node
      uses: actions/setup-node@v3
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ^${{ env.GO_VERSION }}

    - name: Check out code into the Go module directory
      uses: actions/checkout@v3

    - name: Restore NPM cache
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-nodemodules-${{ env.NODE_VERSION }}-pr-${{ hashFiles('client/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nodemodules-${{ env.NODE_VERSION }}-pr
          
    - name: Restore NPM cache
      uses: actions/cache@v3
      with:
        path: client/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('client/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - name: Download Go Binaries
      run: |
        wget https://github.com/swaggo/swag/releases/download/v${{ env.SWAG_VERSION }}/swag_${{ env.SWAG_VERSION }}_Linux_x86_64.tar.gz
        mkdir -p ~/go/bin
        tar -zxf swag*.tar.gz -C ~/go/bin
        rm -rf swag*.tar.gz
        
    - name: Prepare supporting stuff
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc-mingw-w64
        
    - name: Generate Swagger Docs
      run: |
        ~/go/bin/swag init -o web/swagger -g web/loader.go
        
    - name: Build Linux
      run: |
        go build -o pufferpanel -buildvcs=false -v github.com/pufferpanel/pufferpanel/v2/cmd
        go test -v ./...
      env:
        GOOS: linux
        GOARCH: amd64
        
    - name: Build Windows
      run: |
        go build -o pufferpanel.exe -buildvcs=false -v github.com/pufferpanel/pufferpanel/v2/cmd
      env:
        GOOS: windows
        GOARCH: amd64
        CC: x86_64-w64-mingw32-gcc
        CXX: x86_64-w64-mingw32-g++
        CGO_ENABLED: 1
        
    - name: npm install, build
      run: |
        npm install
        npm run build
      env:
        CI: true
      working-directory: client
